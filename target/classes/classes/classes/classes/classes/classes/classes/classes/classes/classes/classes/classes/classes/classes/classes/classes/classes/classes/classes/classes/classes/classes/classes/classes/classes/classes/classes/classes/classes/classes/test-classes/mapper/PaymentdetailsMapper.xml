<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.takeout.mapper.PaymentdetailsMapper">
  <resultMap id="BaseResultMap" type="com.example.takeout.entity.Paymentdetails">
    <id column="payment_details_id" jdbcType="INTEGER" property="paymentDetailsId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_money" jdbcType="DECIMAL" property="orderMoney" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="order_id" jdbcType="INTEGER" property="orderId"/>
  </resultMap>
  <sql id="Base_Column_List">
    payment_details_id, user_id, order_money, `status`,order_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from paymentdetails
    where payment_details_id = #{paymentDetailsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from paymentdetails
    where payment_details_id = #{paymentDetailsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="payment_details_id" keyProperty="paymentDetailsId" parameterType="com.example.takeout.entity.Paymentdetails" useGeneratedKeys="true">
    insert into paymentdetails ( user_id, order_money,
      `status`,order_id)
    values (#{userId,jdbcType=INTEGER}, #{orderMoney,jdbcType=DECIMAL},
      #{status,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER} )
  </insert>
  <insert id="insertSelective" keyColumn="payment_details_id" keyProperty="paymentDetailsId" parameterType="com.example.takeout.entity.Paymentdetails" useGeneratedKeys="true">
    insert into paymentdetails
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderMoney != null">
        order_money,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderMoney != null">
        #{orderMoney,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.takeout.entity.Paymentdetails">
    update paymentdetails
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderMoney != null">
        order_money = #{orderMoney,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
    </set>
    where payment_details_id = #{paymentDetailsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.takeout.entity.Paymentdetails">
    update paymentdetails
    set
      user_id = #{userId,jdbcType=INTEGER},
      order_money = #{orderMoney,jdbcType=DECIMAL},
      `status` = #{status,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
    where payment_details_id = #{paymentDetailsId,jdbcType=INTEGER}
  </update>
</mapper>